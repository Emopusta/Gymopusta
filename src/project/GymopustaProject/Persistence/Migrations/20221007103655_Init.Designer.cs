// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20221007103655_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Move", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("MoveAreaId")
                        .HasColumnType("int")
                        .HasColumnName("MoveAreaId");

                    b.Property<string>("MoveName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MoveName");

                    b.HasKey("Id");

                    b.HasIndex("MoveAreaId");

                    b.ToTable("Moves", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "blabla bla bla",
                            MoveAreaId = 1,
                            MoveName = "Chest Press"
                        });
                });

            modelBuilder.Entity("Domain.Entities.MoveArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MoveAreaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MoveAreaName");

                    b.Property<int>("MoveId")
                        .HasColumnType("int")
                        .HasColumnName("MoveId");

                    b.HasKey("Id");

                    b.ToTable("MoveAreas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MoveAreaName = "Chest",
                            MoveId = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Move", b =>
                {
                    b.HasOne("Domain.Entities.MoveArea", "MoveArea")
                        .WithMany("Moves")
                        .HasForeignKey("MoveAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MoveArea");
                });

            modelBuilder.Entity("Domain.Entities.MoveArea", b =>
                {
                    b.Navigation("Moves");
                });
#pragma warning restore 612, 618
        }
    }
}
